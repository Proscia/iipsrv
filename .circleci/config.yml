version: 2.1
jobs:

  # Build and push the iipsrv Docker image.
  docker-build:
    machine:
      image: ubuntu-2004:202010-01

    steps:
      - checkout

      - run:
          name: Build proscia/iipsrv Docker image
          command: |
            # E.g.:  CIRCLE_REPOSITORY_URL=git@github.com:Leo311/iipsrv.git
            IIPSRV_REPOSITORY_URL=$(echo ${CIRCLE_REPOSITORY_URL} \
                | perl -pe "s{:}{/}; s{^git}{https://${GITHUB_OAUTH}:x-oauth-basic}")

            docker build docker/ -t=proscia/iipsrv \
                --build-arg IIPSRV_REPOSITORY_URL=${IIPSRV_REPOSITORY_URL} \
                --build-arg IIPSRV_BRANCH=${CIRCLE_BRANCH} \
                --build-arg QUIET=cat

      - run:
          name: Check Docker image
          command: |
            docker images -a
            docker ps -a

      - run:
          name: Push Docker image to AWS ECR
          command: |
            export REPO_NAME="circleci"
            export REPO_NAME+="/${CIRCLE_PROJECT_USERNAME,,}"  # Using ${..,,} bash lower-case shell expansion
            export REPO_NAME+="/${CIRCLE_PROJECT_REPONAME,,}"
            export REPO_NAME+="/${CIRCLE_BRANCH,,}"

            export REPO_IMAGE_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}"
            export DATE_COMMIT_TAG=utc.$(date -u +%Y%m%d.%H%M%S).commit.${CIRCLE_SHA1:0:7}

            docker tag proscia/iipsrv ${REPO_IMAGE_URI}  # Default :latest tag
            docker tag proscia/iipsrv ${REPO_IMAGE_URI}:${DATE_COMMIT_TAG}
            docker images || true

            $(aws ecr get-login --no-include-email)
            # (aws ecr create-repository help | cat) || true  # "WARNING: terminal is not fully functional" [so cat the help text]
            # Unknown options: --image-tag-mutability, IMMUTABLE
            # aws ecr create-repository --repository-name "${REPO_IMAGE_URI}" --image-tag-mutability IMMUTABLE \
            #    || true  # In case the repository already exists.
            aws ecr create-repository --repository-name "${REPO_NAME}" \
                || true  # In case the repository already exists.

            # Push the Docker image with all its tags.
            # In lieu of "--quiet" option for "docker push":
            docker push ${REPO_IMAGE_URI} \
                | perl -ne '$|=1; print ($_ =~ /push|digest:|size:/ ? "\n$_" : ".")'



  # A test workflow demonstrating the development host build of iipsrv.
  host-build:
    machine:
      image: ubuntu-2004:202010-01

    steps:
      - checkout

      - run:
          name: Where am I?
          command: |
            whoami
            pwd
            df -h
            ls -al
            ls -al ~/.ssh
            ssh-add -l
            git config --global --list
            git remote -v
            # git branch -a  # Can cause build error ":Too long with no output (exceeded 10m0s)"
            git status -uno

      - run:
          name: Build libCZI
          command: |
            cd ..
            git clone https://${GITHUB_OAUTH}:x-oauth-basic@github.com/${CIRCLE_PROJECT_USERNAME}/libCZI.git
            cd libCZI

            cmake -G "Unix Makefiles"
            make

            # Test for successful builds.
            shopt -s globstar
            ls -l **/*.{a,so} **/CZIcmd
            [ -f Src/libCZI/liblibCZI.so ] \
                && [ -f Src/libCZI/liblibCZIStatic.a ] \
                && [ -f Src/JxrDecode/libJxrDecodeStatic.a ] \
                && [ -x Src/CZICmd/CZIcmd ]

      - run:
          name: Build IIPSRV
          command: |
            # See:  iipsrv/docker/Dockerfile

            ./autogen.sh
            ./configure
            make

      - run:
          name: Publish iipsrv.fcgi
          command: |
            ls -l **/*.fcgi



workflows:
  version: 2

  # Build and push the iipsrv Docker image.
  docker_workflow:
    jobs:
      - docker-build:
          context: dev-deployment-user
          filters:
            branches:
              only:
                - main-proscia-iipsrv

  # A test workflow demonstrating the development host build of iipsrv.
  host_workflow:
    jobs:
      - host-build:
          context: dev-deployment-user
          filters:
            branches:
              only:
                - main-proscia-iipsrv
                - /fix-.*/
